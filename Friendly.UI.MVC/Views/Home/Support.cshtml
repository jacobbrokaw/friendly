@model Friendly.UI.MVC.Models.SupportViewModel

@{
    ViewBag.Title = "Get Support";
}

<div class="card">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="card-content">
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="input-field col s12 m4">
                    @if (User.Identity.IsAuthenticated)
                    {
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { disabled = true } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Name)
                    }
                    @Html.LabelFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="input-field col s12 m8">
                    @if (User.Identity.IsAuthenticated)
                    {
                    @Html.EditorFor(model => model.Email, new { htmlattributes = new { disabled = true } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Email)
                    }
                    @Html.LabelFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="input-field col s12">
                    @Html.EditorFor(model => model.Subject)
                    @Html.LabelFor(model => model.Subject)
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>

                <div class="input-field col s12">
                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "materialize-textarea" } })
                    @Html.LabelFor(model => model.Message)
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="card-action">
            <button type="submit" class="btn accent waves-effect waves-light">
                Send
                <i class="material-icons right">send</i>
            </button>
        </div>
    }
</div>

@if (TempData["SentMail"] != null)
{
    @section Scripts {
        <script>
            M.toast({ html: "Thank you for contacting us. We will get back to you as soon as possible." });
        </script>
    }
}


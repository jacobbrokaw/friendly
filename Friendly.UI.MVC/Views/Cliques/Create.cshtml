@model Friendly.DATA.EF.Clique

@{
    ViewBag.Title = "Create Clique";
}

<div class="card">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="card-content">
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="input-field col s12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="input-field col s12">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>

                <div class="input-field col s12">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>

                <div class="input-field col s12">
                    @Html.DropDownList("BetaId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.LabelFor(model => model.BetaId, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.ValidationMessageFor(model => model.BetaId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="card-action">
            <a href="@Url.Action("Index")" class="btn-flat waves-effect waves-accent accent-text">Cancel</a>
            <button type="submit" class="right btn accent waves-effect waves-light">
                Create
                <i class="material-icons right">save</i>
            </button>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model Friendly.DATA.EF.Application

@{
	ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
	<h4>Application</h4>
	<hr />
	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(model => model.ApplicationDate)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.ApplicationDate)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.UserDetail.FullName)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.UserDetail.FullName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ResumeFilename)
		</dt>

		<dd>
			<embed src="@Url.Content("~/Content/Resumes/" + Model.ResumeFilename)" style="width:80%;height:500px;" alt="Unable to load current resume" />
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ApplicationStatus.StatusName)
		</dt>

		<dd>
			<span id="applicationStatus">@Html.DisplayFor(model => model.ApplicationStatus.StatusName)</span>
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.OpenFriendship.Friendship.Title)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.OpenFriendship.Friendship.Title)
		</dd>

		@if (User.IsInRole("Alpha") || User.IsInRole("Beta"))
		{
			<dt>
				@Html.DisplayNameFor(model => model.ManagerNotes)
			</dt>

			<dd>
				@if (User.IsInRole("Alpha"))
				{
					@Html.DisplayFor(model => model.ManagerNotes)
				}
				else
				{
					using (Html.BeginForm("UpdateNotes", "Applications", new { id = Model.ApplicationId }))
					{
						@Html.AntiForgeryToken()
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })

						<div class="form-group">
							@Html.EditorFor(model => model.ManagerNotes, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.ManagerNotes, "", new { @class = "text-danger" })
						</div>
						<div class="form-group">
							<input type="submit" value="Update Notes" class="btn btn-primary" />
						</div>
					}
				}
			</dd>
		}

	</dl>

</div>

@if (Model.ApplicationStatusId == 1 && User.IsInRole("Beta"))
{
	<div id="actions">
		<button id="acceptBtn" onclick="accept()" class="btn btn-success">Accept</button>
		<button id="rejectBtn" onclick="reject()" class="btn btn-danger">Reject</button>
	</div>
	<span id="message" class="text-success"></span>

	@section Scripts {
		<script>
	function accept() {
		fetch('/Applications/Accept/@Model.ApplicationId')
			.then((res) => { return res.json() })
			.then((data) => {
				if (data.status == 200) {
					applicationStatus.textContent = "Accepted";
					message.setAttribute("class", "text-success");
				} else {
					message.setAttribute("class", "text-muted");
				}
				actions.setAttribute("hidden", "true");
				message.textContent = data.message;
			});
	}

	async function reject() {
		fetch('/Applications/Reject/@Model.ApplicationId')
			.then((res) => { return res.json() })
			.then((data) => {
				if (data.status == 200) {
					applicationStatus.textContent = "Rejected";
					message.setAttribute("class", "text-success");
				} else {
					message.setAttribute("class", "text-muted");
				}
				actions.setAttribute("hidden", "true");
				message.textContent = data.message;
			});
	}
		</script>
	}
}

<p>
	@Html.ActionLink("Back", "Index")
</p>